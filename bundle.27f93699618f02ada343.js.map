{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/animejs/anime.min.js","webpack:///(webpack)/buildin/global.js","webpack:///./app/lettersAnimation.js","webpack:///./app/background.js","webpack:///./app/skillsAnimation.js","webpack:///./app/cityAnimaton.js","webpack:///./app/sectionTitleAnimation.js","webpack:///./app/swiper.js","webpack:///./app/objectAnimation.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./app/preloader.js","webpack:///./app/navigation.js","webpack:///./app/emailVars.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/emailjs-com/dist/email.js","webpack:///./app/emails.js","webpack:///./node_modules/matter-js/build/matter.js","webpack:///./app/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","$jscomp","scope","defineProperties","set","TypeError","Array","getGlobal","window","global","this","SYMBOL_PREFIX","initSymbol","symbolCounter_","initSymbolIterator","iterator","configurable","writable","arrayIterator","iteratorPrototype","length","done","next","array","iteratorFromArray","String","u","polyfill","split","$jscomp$this","__WEBPACK_AMD_DEFINE_ARRAY__","a","h","col","document","querySelectorAll","b","arguments","f","k","push","reduce","concat","arr","str","NodeList","HTMLCollection","slice","some","C","D","z","und","y","exec","I","fnc","target","id","total","E","style","getComputedStyle","getPropertyValue","replace","toLowerCase","J","dom","W","getAttribute","svg","K","indexOf","transform","L","parseFloat","F","Math","sqrt","pow","x","M","points","numberOfItems","getItem","N","getTotalLength","tagName","PI","Y","el","getPointAtLength","atan2","O","pth","totalLength","rgb","hex","parseInt","hsl","substr","test","original","numbers","match","map","Number","strings","P","aa","obj","duration","delay","da","tweens","to","w","from","start","end","offset","easing","A","apply","Q","elasticity","min","max","isPath","isColor","round","R","fa","ga","S","targets","children","animatables","animations","type","animatable","q","Promise","g","reversed","isNaN","ha","currentValue","keys","H","body","join","currentTime","progress","remaining","v","G","seek","began","direction","pause","completed","reset","loop","paused","tick","speed","splice","play","B","ia","reverse","restart","finished","autoplay","update","begin","run","complete","isArray","toString","SVGElement","nodeType","Float32Array","abs","sin","asin","In","Out","InOut","linear","forEach","css","attribute","setAttribute","requestAnimationFrame","cancelAnimationFrame","version","running","remove","getValue","path","setDashoffset","bezier","easings","timeline","add","random","floor","Function","eval","lettersRemove","nodeDom","querySelector","domContent","innerHTML","className","item","lettersReveals","currentWordLength","console","log","_animejs2","opacity","assign","return","Bubbles","options","_this","init","viewportWidth","documentElement","clientWidth","viewportHeight","clientHeight","scrollTimeout","resizeTimeout","engine","Matter","Engine","world","gravity","render","Render","canvas","canvasSelector","width","height","wireframes","background","runner","Runner","bodies","totalBodies","pixelsPerBody","createBody","World","shutdown","clear","stop","removeEventListener","onResizeThrottled","randomize","range","_range","_slicedToArray","radius","radiusRange","color","colors","Bodies","circle","fillStyle","frictionAir","airFriction","collisionFilter","group","collisions","plugin","wrap","onScrollThrottled","currentSlide","setTimeout","onScroll","scrollDelay","delta","lastOffset","scrollVelocity","Body","setVelocity","velocity","xVarianceRange","yVarianceRange","onResize","resizeDelay","_extends","skillsAnimation","notDone","index","scale","cityAnimation","anime","city","innerWidth","isEnd","strokeDashoffset","fill","titleAnime","_lettersAnimation","notDoneSet","Set","has","removed","_sectionTitleAnimation","_skillsAnimation","backgroundSharp","addEventListener","mySwiper","Swiper","innerHeight","allowTouchMove","mousewheel","keyboard","enabled","navigation","nextEl","prevEl","on","activeIndex","rects","_toConsumableArray","braket","removedDate","removedDate1","objAnimation","translateX","then","doc","activeElement","blur","nodeName","getElementById","createEvent","initEvent","createElement","childNodes","getElementsByTagName","location","hash","win","navigator","userAgent","history","CustomEvent","Image","Date","screen","clearTimeout","Dom7","[object Object]","self","$","selector","context","els","tempParent","html","trim","toCreate","unique","uniqueArray","fn","Class","Methods","addClass","classes","j","classList","removeClass","hasClass","contains","toggleClass","toggle","attr","attrs","attrName","removeAttr","removeAttribute","data","dom7ElementDataStorage","dataKey","elStyle","webkitTransform","transition","webkitTransitionDuration","transitionDuration","args","eventType","targetSelector","listener","capture","handleLiveEvent","eventData","dom7EventData","unshift","is","parents","handleEvent","events","dom7LiveListeners","proxyListener","dom7Listeners","off","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","outerHeight","offsetHeight","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","methodName","Utils","nextTick","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","MozTransform","OTransform","MsTransform","msTransform","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","gestures","SwiperClass","eventsListeners","eventName","handler","event","onceHandler","eventHandler","index$$1","data$$1","handlers","instanceParams","instance","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","components","use","proto","static","install","installModule","updateSize","swiper","$el","isHorizontal","isVertical","size","updateSlides","$wrapperEl","swiperSize","rtl","wrongRTL","slides","slideClass","slidesLength","virtual","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSlidesLength","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","ceil","slidesPerView","slidesPerColumnFill","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","roundLengths","swiperSlideSize","centeredSlides","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","activeSlides","newHeight","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","slideProgress","minTranslate","slideBefore","slideAfter","updateProgress","translatesDiff","maxTranslate","isBeginning","wasBeginning","wasEnd","updateSlidesClasses","realIndex","isVirtual","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","snapIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","swiper_esm_bundle_slide","slideTo","runCallbacks","internal","slideIndex","animating","preventIntercationOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","autoHeight","transitionStart","setTransition","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","slideReset","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","which","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","touchAngle","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","breakpoints","setBreakpoint","newTranslate","swiper_esm_bundle_events","attachEvents","touchEvents","wrapperEl","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","freeModeMomentumBounce","freeModeSticky","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","touchEventsTarget","passiveListeners","passive","move","detachEvents","swiper_esm_bundle_breakpoints","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","point","sort","swiper_esm_bundle_Browser","isIE","isSafari","isUiWebView","defaults","uniqueNavElements","preloadImages","updateOnImagesReady","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","dir","wasLocked","isLocked","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper$1","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$2","Support$2","support","Browser$2","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","mutations","mutation","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","onlyInViewport","inView","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","onwheel","implementation","hasFeature","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","rtlFactor","normalize","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stopAutoplay","releaseOnEdges","getTime","eventsTarged","Navigation","$nextEl","$prevEl","disabledClass","lockClass","Pagination","pagination","current","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","totalClass","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","val","i1","i3","interpolate","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","hideOnClick","onTransitionEnd","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","__webpack_exports__","_objectAnimation","doneTimeLine","preloader","borderRadius","naviList","button","_swiper","checked","dataset","emails","service","template","user","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","Item","noop","title","env","argv","versions","addListener","once","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","undefined","setImmediate","registerImmediate","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","getPrototypeOf","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","source","attachEvent","MessageChannel","port1","port2","script","onreadystatechange","task","clearImmediate","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","require","code","1","setTimeoutFunc","_state","_handled","_value","_deferreds","doResolve","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","reject","promise","resolve","newValue","finale","thisArg","_unhandledRejectionFn","reason","ex","catch","prom","finally","all","res","race","values","err","warn","2","EmailJSResponseStatus_1","UI_1","_userID","sendPost","headers","xhr","XMLHttpRequest","responseStatus","EmailJSResponseStatus","status","open","setRequestHeader","send","userID","serviceID","templateID","templatePrams","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","Content-type","sendForm","form","UI","progressState","formData","FormData","response","successState","error","errorState","./models/EmailJSResponseStatus","./services/ui/UI","promise-polyfill","3","httpResponse","responseText","4","clearAll","PROGRESS","DONE","ERROR","emailItput","emailText","emailBtn","email","_emailjsCom","_emailVars","notes","_dereq_","Vertices","Vector","Sleeping","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","nextId","parts","angle","vertices","fromPath","torque","positionImpulse","constraintImpulse","totalContacts","angularSpeed","angularVelocity","isSensor","isStatic","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","category","mask","slop","timeScale","visible","sprite","xScale","yScale","xOffset","yOffset","lineWidth","_initProperties","nextGroup","isNonColliding","nextCategory","bounds","positionPrev","clone","anglePrev","axes","area","mass","inertia","defaultFillStyle","choose","strokeStyle","settings","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setAngularVelocity","setParts","_original","inverseMass","inverseInertia","Infinity","moment","fromVertices","centre","autoHull","clockwiseSort","hull","hullCentre","_totalProperties","sub","rotateAbout","magnitude","translation","rotation","dx","dy","totalArea","totalInertia","circleRadius","deltaTime","correction","deltaTimeSquared","velocityPrevX","velocityPrevY","applyForce","properties","mult","div","../core/Common","../core/Sleeping","../geometry/Axes","../geometry/Bounds","../geometry/Vector","../geometry/Vertices","../render/Render","Composite","Events","isModified","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","objects","addBody","addConstraint","addComposite","constraint","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","removeBodyAt","removeConstraintAt","keepStatic","allBodies","allConstraints","allComposites","rebase","recursive","../core/Events","./Body","../constraint/Constraint","./Composite","Contact","vertex","normalImpulse","tangentImpulse","5","Detector","SAT","Pair","broadphasePairs","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","partA","partB","previousCollision","pair","isActive","collision","collides","collided","filterA","filterB","./Pair","./SAT","6","Grid","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","pairId","pairKeys","./Detector","7","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","contactId","contact","setActive","./Contact","8","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","pairIndex","indexesToRemove","9","Query","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","rectangle","outside","result","../factory/Bodies","10","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","11","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","MAX_VALUE","_projectToAxis","projection","vertexA","vertexB","nearestDistance","vertexToBody","bodyAPosition","12","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","resistanceTotal","zero","postSolveAll","13","MouseConstraint","Mouse","mouse","mouseConstraint","_triggerEvents","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","../body/Composite","../collision/Detector","../core/Mouse","./Constraint","14","_nextId","_seed","_nowStartTime","argsStart","deepClone","shuffle","temp","choices","isElement","HTMLElement","isFunction","isPlainObject","isString","performance","webkitNow","_seededRandom","colorToNumber","colorString","charAt","logLevel","info","haystack","needle","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","chainPathBefore","base","chainPathAfter","_requireGlobal","globalName","15","positionIterations","velocityIterations","constraintIterations","enableSleeping","timing","broadphase","renderDefaults","metrics","extended","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","../body/Body","../body/World","../collision/Grid","../collision/Pairs","../collision/Resolver","./Common","./Events","./Metrics","./Sleeping","16","eventNames","names","callbacks","newCallbacks","eventClone","17","Plugin","uses","used","before","after","./Plugin","18","19","absolute","mousedownPosition","mouseupPosition","_getRelativeMousePosition","setElement","setOffset","setScale","elementBounds","rootNode","pageXOffset","pageYOffset","20","_registry","register","isPlugin","registered","pluginVersion","versionParse","number","registeredVersion","dependency","dependencyParse","isUsed","isFor","parsed","for","versionSatisfies","plugins","dependencies","sortedDependencies","_warned","tracked","parsedBase","resolved","identifiers","isRange","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","21","_requestAnimationFrame","_cancelAnimationFrame","_frameTimeout","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","deltaMin","deltaMax","./Engine","22","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","23","decomp","chamfer","quality","qualityMin","qualityMax","trapezoid","slope","verticesPath","roof","x3","maxSides","sides","polygon","theta","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunkVertices","pav","pbv","magnitudeSquared","db","isInternal","24","Composites","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","car","wheelSize","wheelAOffset","wheelBOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","./Bodies","25","normalise","gradient","26","boundsA","boundsB","vector","shift","27","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","pathSegList","getPathSegAtLength","x0","y0","segs","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","28","output","vectorA","vectorB","cross3","vectorC","scalar","negate","29","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","acos","flag","upper","lower","30","RenderPixi","../collision/Contact","../collision/Pair","../collision/Query","../collision/SAT","../constraint/MouseConstraint","../core/Engine","../core/Matter","../core/Metrics","../core/Plugin","../core/Runner","../factory/Composites","../geometry/Svg","../render/RenderPixi","31","wireframeBackground","hasBounds","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","getContext","textures","setPixelRatio","_getPixelRatio","lookAt","padding","viewHeight","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","debugTimestamp","debugString","font","fillText","beginPath","arc","closePath","moveTo","coils","lineTo","stroke","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","rect","normalPosX","normalPosY","bucketKeys","inspector","selected","setLineDash","selectStart","selectBounds","oncontextmenu","onselectstart","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","cssBackground","backgroundSize","32","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","bgSprite","addChildAt","setBackground","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage"],"mappings":"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","file":"bundle.27f93699618f02ada343.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","/*\n 2017 Julian Garnier\n Released under the MIT license\n*/\nvar $jscomp={scope:{}};$jscomp.defineProperty=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(e,r,p){if(p.get||p.set)throw new TypeError(\"ES3 does not support getters and setters.\");e!=Array.prototype&&e!=Object.prototype&&(e[r]=p.value)};$jscomp.getGlobal=function(e){return\"undefined\"!=typeof window&&window===e?e:\"undefined\"!=typeof global&&null!=global?global:e};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX=\"jscomp_symbol_\";\n$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(e){return $jscomp.SYMBOL_PREFIX+(e||\"\")+$jscomp.symbolCounter_++};\n$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var e=$jscomp.global.Symbol.iterator;e||(e=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol(\"iterator\"));\"function\"!=typeof Array.prototype[e]&&$jscomp.defineProperty(Array.prototype,e,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};$jscomp.arrayIterator=function(e){var r=0;return $jscomp.iteratorPrototype(function(){return r<e.length?{done:!1,value:e[r++]}:{done:!0}})};\n$jscomp.iteratorPrototype=function(e){$jscomp.initSymbolIterator();e={next:e};e[$jscomp.global.Symbol.iterator]=function(){return this};return e};$jscomp.array=$jscomp.array||{};$jscomp.iteratorFromArray=function(e,r){$jscomp.initSymbolIterator();e instanceof String&&(e+=\"\");var p=0,m={next:function(){if(p<e.length){var u=p++;return{value:r(u,e[u]),done:!1}}m.next=function(){return{done:!0,value:void 0}};return m.next()}};m[Symbol.iterator]=function(){return m};return m};\n$jscomp.polyfill=function(e,r,p,m){if(r){p=$jscomp.global;e=e.split(\".\");for(m=0;m<e.length-1;m++){var u=e[m];u in p||(p[u]={});p=p[u]}e=e[e.length-1];m=p[e];r=r(m);r!=m&&null!=r&&$jscomp.defineProperty(p,e,{configurable:!0,writable:!0,value:r})}};$jscomp.polyfill(\"Array.prototype.keys\",function(e){return e?e:function(){return $jscomp.iteratorFromArray(this,function(e){return e})}},\"es6-impl\",\"es3\");var $jscomp$this=this;\n(function(e,r){\"function\"===typeof define&&define.amd?define([],r):\"object\"===typeof module&&module.exports?module.exports=r():e.anime=r()})(this,function(){function e(a){if(!h.col(a))try{return document.querySelectorAll(a)}catch(c){}}function r(a,c){for(var d=a.length,b=2<=arguments.length?arguments[1]:void 0,f=[],n=0;n<d;n++)if(n in a){var k=a[n];c.call(b,k,n,a)&&f.push(k)}return f}function p(a){return a.reduce(function(a,d){return a.concat(h.arr(d)?p(d):d)},[])}function m(a){if(h.arr(a))return a;\nh.str(a)&&(a=e(a)||a);return a instanceof NodeList||a instanceof HTMLCollection?[].slice.call(a):[a]}function u(a,c){return a.some(function(a){return a===c})}function C(a){var c={},d;for(d in a)c[d]=a[d];return c}function D(a,c){var d=C(a),b;for(b in a)d[b]=c.hasOwnProperty(b)?c[b]:a[b];return d}function z(a,c){var d=C(a),b;for(b in c)d[b]=h.und(a[b])?c[b]:a[b];return d}function T(a){a=a.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,function(a,c,d,k){return c+c+d+d+k+k});var c=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(a);\na=parseInt(c[1],16);var d=parseInt(c[2],16),c=parseInt(c[3],16);return\"rgba(\"+a+\",\"+d+\",\"+c+\",1)\"}function U(a){function c(a,c,b){0>b&&(b+=1);1<b&&--b;return b<1/6?a+6*(c-a)*b:.5>b?c:b<2/3?a+(c-a)*(2/3-b)*6:a}var d=/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(a)||/hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(a);a=parseInt(d[1])/360;var b=parseInt(d[2])/100,f=parseInt(d[3])/100,d=d[4]||1;if(0==b)f=b=a=f;else{var n=.5>f?f*(1+b):f+b-f*b,k=2*f-n,f=c(k,n,a+1/3),b=c(k,n,a);a=c(k,n,a-1/3)}return\"rgba(\"+\n255*f+\",\"+255*b+\",\"+255*a+\",\"+d+\")\"}function y(a){if(a=/([\\+\\-]?[0-9#\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(a))return a[2]}function V(a){if(-1<a.indexOf(\"translate\")||\"perspective\"===a)return\"px\";if(-1<a.indexOf(\"rotate\")||-1<a.indexOf(\"skew\"))return\"deg\"}function I(a,c){return h.fnc(a)?a(c.target,c.id,c.total):a}function E(a,c){if(c in a.style)return getComputedStyle(a).getPropertyValue(c.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase())||\"0\"}function J(a,c){if(h.dom(a)&&\nu(W,c))return\"transform\";if(h.dom(a)&&(a.getAttribute(c)||h.svg(a)&&a[c]))return\"attribute\";if(h.dom(a)&&\"transform\"!==c&&E(a,c))return\"css\";if(null!=a[c])return\"object\"}function X(a,c){var d=V(c),d=-1<c.indexOf(\"scale\")?1:0+d;a=a.style.transform;if(!a)return d;for(var b=[],f=[],n=[],k=/(\\w+)\\((.+?)\\)/g;b=k.exec(a);)f.push(b[1]),n.push(b[2]);a=r(n,function(a,b){return f[b]===c});return a.length?a[0]:d}function K(a,c){switch(J(a,c)){case \"transform\":return X(a,c);case \"css\":return E(a,c);case \"attribute\":return a.getAttribute(c)}return a[c]||\n0}function L(a,c){var d=/^(\\*=|\\+=|-=)/.exec(a);if(!d)return a;var b=y(a)||0;c=parseFloat(c);a=parseFloat(a.replace(d[0],\"\"));switch(d[0][0]){case \"+\":return c+a+b;case \"-\":return c-a+b;case \"*\":return c*a+b}}function F(a,c){return Math.sqrt(Math.pow(c.x-a.x,2)+Math.pow(c.y-a.y,2))}function M(a){a=a.points;for(var c=0,d,b=0;b<a.numberOfItems;b++){var f=a.getItem(b);0<b&&(c+=F(d,f));d=f}return c}function N(a){if(a.getTotalLength)return a.getTotalLength();switch(a.tagName.toLowerCase()){case \"circle\":return 2*\nMath.PI*a.getAttribute(\"r\");case \"rect\":return 2*a.getAttribute(\"width\")+2*a.getAttribute(\"height\");case \"line\":return F({x:a.getAttribute(\"x1\"),y:a.getAttribute(\"y1\")},{x:a.getAttribute(\"x2\"),y:a.getAttribute(\"y2\")});case \"polyline\":return M(a);case \"polygon\":var c=a.points;return M(a)+F(c.getItem(c.numberOfItems-1),c.getItem(0))}}function Y(a,c){function d(b){b=void 0===b?0:b;return a.el.getPointAtLength(1<=c+b?c+b:0)}var b=d(),f=d(-1),n=d(1);switch(a.property){case \"x\":return b.x;case \"y\":return b.y;\ncase \"angle\":return 180*Math.atan2(n.y-f.y,n.x-f.x)/Math.PI}}function O(a,c){var d=/-?\\d*\\.?\\d+/g,b;b=h.pth(a)?a.totalLength:a;if(h.col(b))if(h.rgb(b)){var f=/rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(b);b=f?\"rgba(\"+f[1]+\",1)\":b}else b=h.hex(b)?T(b):h.hsl(b)?U(b):void 0;else f=(f=y(b))?b.substr(0,b.length-f.length):b,b=c&&!/\\s/g.test(b)?f+c:f;b+=\"\";return{original:b,numbers:b.match(d)?b.match(d).map(Number):[0],strings:h.str(a)||c?b.split(d):[]}}function P(a){a=a?p(h.arr(a)?a.map(m):m(a)):[];return r(a,\nfunction(a,d,b){return b.indexOf(a)===d})}function Z(a){var c=P(a);return c.map(function(a,b){return{target:a,id:b,total:c.length}})}function aa(a,c){var d=C(c);if(h.arr(a)){var b=a.length;2!==b||h.obj(a[0])?h.fnc(c.duration)||(d.duration=c.duration/b):a={value:a}}return m(a).map(function(a,b){b=b?0:c.delay;a=h.obj(a)&&!h.pth(a)?a:{value:a};h.und(a.delay)&&(a.delay=b);return a}).map(function(a){return z(a,d)})}function ba(a,c){var d={},b;for(b in a){var f=I(a[b],c);h.arr(f)&&(f=f.map(function(a){return I(a,\nc)}),1===f.length&&(f=f[0]));d[b]=f}d.duration=parseFloat(d.duration);d.delay=parseFloat(d.delay);return d}function ca(a){return h.arr(a)?A.apply(this,a):Q[a]}function da(a,c){var d;return a.tweens.map(function(b){b=ba(b,c);var f=b.value,e=K(c.target,a.name),k=d?d.to.original:e,k=h.arr(f)?f[0]:k,w=L(h.arr(f)?f[1]:f,k),e=y(w)||y(k)||y(e);b.from=O(k,e);b.to=O(w,e);b.start=d?d.end:a.offset;b.end=b.start+b.delay+b.duration;b.easing=ca(b.easing);b.elasticity=(1E3-Math.min(Math.max(b.elasticity,1),999))/\n1E3;b.isPath=h.pth(f);b.isColor=h.col(b.from.original);b.isColor&&(b.round=1);return d=b})}function ea(a,c){return r(p(a.map(function(a){return c.map(function(b){var c=J(a.target,b.name);if(c){var d=da(b,a);b={type:c,property:b.name,animatable:a,tweens:d,duration:d[d.length-1].end,delay:d[0].delay}}else b=void 0;return b})})),function(a){return!h.und(a)})}function R(a,c,d,b){var f=\"delay\"===a;return c.length?(f?Math.min:Math.max).apply(Math,c.map(function(b){return b[a]})):f?b.delay:d.offset+b.delay+\nb.duration}function fa(a){var c=D(ga,a),d=D(S,a),b=Z(a.targets),f=[],e=z(c,d),k;for(k in a)e.hasOwnProperty(k)||\"targets\"===k||f.push({name:k,offset:e.offset,tweens:aa(a[k],d)});a=ea(b,f);return z(c,{children:[],animatables:b,animations:a,duration:R(\"duration\",a,c,d),delay:R(\"delay\",a,c,d)})}function q(a){function c(){return window.Promise&&new Promise(function(a){return p=a})}function d(a){return g.reversed?g.duration-a:a}function b(a){for(var b=0,c={},d=g.animations,f=d.length;b<f;){var e=d[b],\nk=e.animatable,h=e.tweens,n=h.length-1,l=h[n];n&&(l=r(h,function(b){return a<b.end})[0]||l);for(var h=Math.min(Math.max(a-l.start-l.delay,0),l.duration)/l.duration,w=isNaN(h)?1:l.easing(h,l.elasticity),h=l.to.strings,p=l.round,n=[],m=void 0,m=l.to.numbers.length,t=0;t<m;t++){var x=void 0,x=l.to.numbers[t],q=l.from.numbers[t],x=l.isPath?Y(l.value,w*x):q+w*(x-q);p&&(l.isColor&&2<t||(x=Math.round(x*p)/p));n.push(x)}if(l=h.length)for(m=h[0],w=0;w<l;w++)p=h[w+1],t=n[w],isNaN(t)||(m=p?m+(t+p):m+(t+\" \"));\nelse m=n[0];ha[e.type](k.target,e.property,m,c,k.id);e.currentValue=m;b++}if(b=Object.keys(c).length)for(d=0;d<b;d++)H||(H=E(document.body,\"transform\")?\"transform\":\"-webkit-transform\"),g.animatables[d].target.style[H]=c[d].join(\" \");g.currentTime=a;g.progress=a/g.duration*100}function f(a){if(g[a])g[a](g)}function e(){g.remaining&&!0!==g.remaining&&g.remaining--}function k(a){var k=g.duration,n=g.offset,w=n+g.delay,r=g.currentTime,x=g.reversed,q=d(a);if(g.children.length){var u=g.children,v=u.length;\nif(q>=g.currentTime)for(var G=0;G<v;G++)u[G].seek(q);else for(;v--;)u[v].seek(q)}if(q>=w||!k)g.began||(g.began=!0,f(\"begin\")),f(\"run\");if(q>n&&q<k)b(q);else if(q<=n&&0!==r&&(b(0),x&&e()),q>=k&&r!==k||!k)b(k),x||e();f(\"update\");a>=k&&(g.remaining?(t=h,\"alternate\"===g.direction&&(g.reversed=!g.reversed)):(g.pause(),g.completed||(g.completed=!0,f(\"complete\"),\"Promise\"in window&&(p(),m=c()))),l=0)}a=void 0===a?{}:a;var h,t,l=0,p=null,m=c(),g=fa(a);g.reset=function(){var a=g.direction,c=g.loop;g.currentTime=\n0;g.progress=0;g.paused=!0;g.began=!1;g.completed=!1;g.reversed=\"reverse\"===a;g.remaining=\"alternate\"===a&&1===c?2:c;b(0);for(a=g.children.length;a--;)g.children[a].reset()};g.tick=function(a){h=a;t||(t=h);k((l+h-t)*q.speed)};g.seek=function(a){k(d(a))};g.pause=function(){var a=v.indexOf(g);-1<a&&v.splice(a,1);g.paused=!0};g.play=function(){g.paused&&(g.paused=!1,t=0,l=d(g.currentTime),v.push(g),B||ia())};g.reverse=function(){g.reversed=!g.reversed;t=0;l=d(g.currentTime)};g.restart=function(){g.pause();\ng.reset();g.play()};g.finished=m;g.reset();g.autoplay&&g.play();return g}var ga={update:void 0,begin:void 0,run:void 0,complete:void 0,loop:1,direction:\"normal\",autoplay:!0,offset:0},S={duration:1E3,delay:0,easing:\"easeOutElastic\",elasticity:500,round:0},W=\"translateX translateY translateZ rotate rotateX rotateY rotateZ scale scaleX scaleY scaleZ skewX skewY perspective\".split(\" \"),H,h={arr:function(a){return Array.isArray(a)},obj:function(a){return-1<Object.prototype.toString.call(a).indexOf(\"Object\")},\npth:function(a){return h.obj(a)&&a.hasOwnProperty(\"totalLength\")},svg:function(a){return a instanceof SVGElement},dom:function(a){return a.nodeType||h.svg(a)},str:function(a){return\"string\"===typeof a},fnc:function(a){return\"function\"===typeof a},und:function(a){return\"undefined\"===typeof a},hex:function(a){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a)},rgb:function(a){return/^rgb/.test(a)},hsl:function(a){return/^hsl/.test(a)},col:function(a){return h.hex(a)||h.rgb(a)||h.hsl(a)}},A=function(){function a(a,\nd,b){return(((1-3*b+3*d)*a+(3*b-6*d))*a+3*d)*a}return function(c,d,b,f){if(0<=c&&1>=c&&0<=b&&1>=b){var e=new Float32Array(11);if(c!==d||b!==f)for(var k=0;11>k;++k)e[k]=a(.1*k,c,b);return function(k){if(c===d&&b===f)return k;if(0===k)return 0;if(1===k)return 1;for(var h=0,l=1;10!==l&&e[l]<=k;++l)h+=.1;--l;var l=h+(k-e[l])/(e[l+1]-e[l])*.1,n=3*(1-3*b+3*c)*l*l+2*(3*b-6*c)*l+3*c;if(.001<=n){for(h=0;4>h;++h){n=3*(1-3*b+3*c)*l*l+2*(3*b-6*c)*l+3*c;if(0===n)break;var m=a(l,c,b)-k,l=l-m/n}k=l}else if(0===\nn)k=l;else{var l=h,h=h+.1,g=0;do m=l+(h-l)/2,n=a(m,c,b)-k,0<n?h=m:l=m;while(1e-7<Math.abs(n)&&10>++g);k=m}return a(k,d,f)}}}}(),Q=function(){function a(a,b){return 0===a||1===a?a:-Math.pow(2,10*(a-1))*Math.sin(2*(a-1-b/(2*Math.PI)*Math.asin(1))*Math.PI/b)}var c=\"Quad Cubic Quart Quint Sine Expo Circ Back Elastic\".split(\" \"),d={In:[[.55,.085,.68,.53],[.55,.055,.675,.19],[.895,.03,.685,.22],[.755,.05,.855,.06],[.47,0,.745,.715],[.95,.05,.795,.035],[.6,.04,.98,.335],[.6,-.28,.735,.045],a],Out:[[.25,\n.46,.45,.94],[.215,.61,.355,1],[.165,.84,.44,1],[.23,1,.32,1],[.39,.575,.565,1],[.19,1,.22,1],[.075,.82,.165,1],[.175,.885,.32,1.275],function(b,c){return 1-a(1-b,c)}],InOut:[[.455,.03,.515,.955],[.645,.045,.355,1],[.77,0,.175,1],[.86,0,.07,1],[.445,.05,.55,.95],[1,0,0,1],[.785,.135,.15,.86],[.68,-.55,.265,1.55],function(b,c){return.5>b?a(2*b,c)/2:1-a(-2*b+2,c)/2}]},b={linear:A(.25,.25,.75,.75)},f={},e;for(e in d)f.type=e,d[f.type].forEach(function(a){return function(d,f){b[\"ease\"+a.type+c[f]]=h.fnc(d)?\nd:A.apply($jscomp$this,d)}}(f)),f={type:f.type};return b}(),ha={css:function(a,c,d){return a.style[c]=d},attribute:function(a,c,d){return a.setAttribute(c,d)},object:function(a,c,d){return a[c]=d},transform:function(a,c,d,b,f){b[f]||(b[f]=[]);b[f].push(c+\"(\"+d+\")\")}},v=[],B=0,ia=function(){function a(){B=requestAnimationFrame(c)}function c(c){var b=v.length;if(b){for(var d=0;d<b;)v[d]&&v[d].tick(c),d++;a()}else cancelAnimationFrame(B),B=0}return a}();q.version=\"2.2.0\";q.speed=1;q.running=v;q.remove=\nfunction(a){a=P(a);for(var c=v.length;c--;)for(var d=v[c],b=d.animations,f=b.length;f--;)u(a,b[f].animatable.target)&&(b.splice(f,1),b.length||d.pause())};q.getValue=K;q.path=function(a,c){var d=h.str(a)?e(a)[0]:a,b=c||100;return function(a){return{el:d,property:a,totalLength:N(d)*(b/100)}}};q.setDashoffset=function(a){var c=N(a);a.setAttribute(\"stroke-dasharray\",c);return c};q.bezier=A;q.easings=Q;q.timeline=function(a){var c=q(a);c.pause();c.duration=0;c.add=function(d){c.children.forEach(function(a){a.began=\n!0;a.completed=!0});m(d).forEach(function(b){var d=z(b,D(S,a||{}));d.targets=d.targets||a.targets;b=c.duration;var e=d.offset;d.autoplay=!1;d.direction=c.direction;d.offset=h.und(e)?b:L(e,b);c.began=!0;c.completed=!0;c.seek(d.offset);d=q(d);d.began=!0;d.completed=!0;d.duration>b&&(c.duration=d.duration);c.children.push(d)});c.seek(0);c.reset();c.autoplay&&c.restart();return c};return c};q.random=function(a,c){return Math.floor(Math.random()*(c-a+1))+a};return q});","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import anime from 'animejs';\r\n\r\n\r\nexport const lettersRemove = (nodeDom) => {\r\n    const dom = document.querySelector(nodeDom);\r\n    const domContent = [...dom.innerHTML];\r\n\r\n    dom.innerHTML = '';\r\n    const className = nodeDom.split('.').join('');\r\n\r\n    domContent.forEach(item => {\r\n        dom.innerHTML += `<span class=\"${className}-letter revealed\">${item}</span>`\r\n    });\r\n\r\n    return nodeDom;\r\n\r\n};\r\n\r\nexport const lettersReveals = (nodeDom) => {\r\n    let currentWordLength = document.querySelectorAll(nodeDom+'-letter').length;\r\n    console.log(currentWordLength);\r\n    return anime({\r\n        targets: nodeDom+'-letter',\r\n        opacity: [0, 1],\r\n        duration: 15000/currentWordLength,\r\n        delay: (el, i) => i*200,\r\n        easing: 'easeInOutQuad',\r\n    });\r\n};","import Matter from 'matter-js';\r\n\r\n\r\n\r\nexport default class Bubbles {\r\n\tconstructor (options) {\r\n\t\tthis.options = {\r\n\t\t\tcanvasSelector: '',\t\t\t\t// to find <canvas> in DOM to draw on\r\n\t\t\tradiusRange: [75, 150],\t\t\t// random range of body radii\r\n\t\t\txVarianceRange: [-1, 1],\t// random range of x velocity scaling on bodies\r\n\t\t\tyVarianceRange: [0.5, 1.5],\t\t// random range of y velocity scaling on bodies\r\n\t\t\tairFriction: 0.04,\t\t\t\t// air friction of bodies\r\n\t\t\topacity: 1,\t\t\t\t\t\t// opacity of bodies\r\n\t\t\tcollisions: false,\t\t\t\t// do bodies collide or pass through\r\n\t\t\tscrollVelocity: 2.5,\t\t\t// scaling of scroll delta to velocity applied to bodies\r\n\t\t\tpixelsPerBody: 50000,\t\t\t// viewport pixels required for each body added\r\n\r\n\t\t\t// colors to cycle through to fill bodies\r\n\t\t\tcolors: ['#2cbcc9'],\r\n\t\t\t...options\r\n\t\t};\r\n\r\n\t\tthis.scrollDelay = 100;\r\n\t\tthis.resizeDelay = 400;\r\n\t\tthis.lastOffset  = 0;\r\n\t}\r\n\r\n\tinit = () => {\r\n\r\n\t\tconst viewportWidth = document.documentElement.clientWidth;\r\n\t\tconst viewportHeight = document.documentElement.clientHeight;\r\n\r\n\t\tthis.scrollTimeout = null;\r\n\t\tthis.resizeTimeout = null;\r\n\t\r\n\t\t// engine\r\n\t\tthis.engine = Matter.Engine.create();\r\n\t\tthis.engine.world.gravity.y = 0;\r\n\t\r\n\t\t// render\r\n\t\tthis.render = Matter.Render.create({\r\n\t\t\tcanvas: document.querySelector(this.options.canvasSelector),\r\n\t\t\tengine: this.engine,\r\n\t\t\toptions: {\r\n\t\t\t\twidth: viewportWidth,\r\n\t\t\t\theight: viewportHeight,\r\n\t\t\t\twireframes: false,\r\n\t\t\t\tbackground: 'transparent'\r\n\t\t\t}\r\n\t\t});\r\n\t\tMatter.Render.run(this.render);\r\n\t\r\n\t\t// runner\r\n\t\tthis.runner = Matter.Runner.create();\r\n\t\tMatter.Runner.run(this.runner, this.engine);\r\n\t\r\n\t\t// bodies\r\n\t\tthis.bodies = [];\r\n\t\tlet totalBodies = Math.round(viewportWidth * viewportHeight / this.options.pixelsPerBody);\r\n\t\tfor (let i = 0; i <= totalBodies; i++) {\r\n\t\t\tlet body = this.createBody(viewportWidth, viewportHeight);\r\n\t\t\tthis.bodies.push(body);\r\n\t\t}\r\n\t\tMatter.World.add(this.engine.world, this.bodies);\r\n\t}\r\n\r\n\tshutdown = () => {\r\n\t\tMatter.Engine.clear(this.engine);\r\n\t\tMatter.Render.stop(this.render);\r\n\t\tMatter.Runner.stop(this.runner);\r\n\r\n\t\twindow.removeEventListener('resize', this.onResizeThrottled);\r\n\t}\r\n\r\n\trandomize = (range) => {\r\n\t\tlet [min, max] = range;\r\n\t\treturn Math.random() * (max - min) + min;\r\n\t}\r\n\t\r\n\t// create body with some random parameters\r\n\tcreateBody = (viewportWidth, viewportHeight) => {\r\n\t\tconst x = this.randomize([0, viewportWidth]);\r\n\t\tconst y = this.randomize([0, viewportHeight]);\r\n\t\tconst radius = this.randomize(this.options.radiusRange);\r\n\t\tconst color = this.options.colors[this.bodies.length % this.options.colors.length];\r\n\t\r\n\t\treturn Matter.Bodies.circle(x, y, radius, {\r\n\t\t\trender: {\r\n\t\t\t\tfillStyle: color,\r\n\t\t\t\topacity: this.options.opacity\r\n\t\t\t},\r\n\t\t\tfrictionAir: this.options.airFriction,\r\n\t\t\tcollisionFilter: {\r\n\t\t\t\tgroup: this.options.collisions ? 1 : -1\r\n\t\t\t},\r\n\t\t\tplugin: {\r\n\t\t\t\twrap: {\r\n\t\t\t\t\tmin: { x: 0, y: 0 },\r\n\t\t\t\t\tmax: { x: viewportWidth, y: viewportHeight }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tonScrollThrottled = (currentSlide) => {\r\n        console.log('scrolled');\r\n\t\tif (!this.scrollTimeout) {\r\n\t\t\tthis.scrollTimeout = setTimeout(this.onScroll(currentSlide), this.scrollDelay);\r\n\t\t}\r\n\t}\r\n\r\n\tonScroll = (currentSlide) => {\r\n\t\treturn () => {\r\n\t\t\tthis.scrollTimeout = null;\r\n\r\n\t\t\tconst delta = (this.lastOffset - currentSlide) * this.options.scrollVelocity;\r\n\t\t\tthis.bodies.forEach((body) => {\r\n\t\t\t\tMatter.Body.setVelocity(body, {\r\n\t\t\t\t\tx: body.velocity.x + delta * this.randomize(this.options.xVarianceRange),\r\n\t\t\t\t\ty: body.velocity.y + delta * this.randomize(this.options.yVarianceRange)\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\r\n\t\t\tthis.lastOffset = currentSlide;\r\n\t\t}\r\n        \t\r\n\t}\r\n\r\n\tonResizeThrottled = () => {\r\n\t\tif (!this.resizeTimeout) {\r\n\t\t\tthis.resizeTimeout = setTimeout(this.onResize.bind(this), this.resizeDelay);\r\n\t\t}\r\n\t}\r\n\r\n\tonResize = () => {\r\n\t\tthis.shutdown();\r\n\t\tthis.init();\r\n\t}\r\n}","import anime from 'animejs';\r\n\r\nlet notDone = true;\r\n\r\nexport const skillsAnimation = (index) => {\r\n    if(index === 2 && notDone){\r\n        anime({\r\n            targets: '.skills__icon-wrap',\r\n            scale: [0, 1],\r\n            delay: (el, i) => i*300,\r\n            duration: 1000,\r\n        });\r\n\r\n        notDone = false;\r\n    }\r\n};\r\n\r\n\r\n","import anime from 'animejs';\r\n\r\nconst timeline = anime.timeline();\r\nlet notDone = true;\r\n\r\nconst city = document.querySelector('.city');\r\n\r\ncity.setAttribute('height', window.innerWidth);\r\ncity.setAttribute('width', window.innerWidth);\r\n\r\n\r\nexport const cityAnimation = (isEnd) => {\r\n    if(isEnd && notDone){\r\n        notDone = false;\r\n\r\n        timeline\r\n        .add({\r\n            targets: '.city__item',\r\n            direction: 'alternate',\r\n            loop: false,\r\n            strokeDashoffset:{\r\n                value: [anime.setDashoffset, 0],\r\n                easing: 'easeInOutSine',\r\n                duration: 9000,\r\n                delay: (el, i) => i * 250,\r\n            }\r\n        })\r\n        .add({\r\n            targets: '.city__item',\r\n            direction: 'alternate',\r\n            loop: false,\r\n            fill: {\r\n                value: (el, i) => i ? ['#fff', '#b9dfe4'] : ['#fff', '#b9dfe4'],\r\n                easing: 'easeInOutSine',\r\n                duration: 2000,\r\n                delay: (el, i) => i * 250,\r\n            },\r\n            offset: '-=3000' \r\n        })\r\n    }\r\n};\r\n","import {lettersRemove, lettersReveals} from './lettersAnimation';\r\n\r\nconst notDoneSet = new Set();\r\n\r\nexport const titleAnime = (index) => {\r\n    if(index > 0 && !notDoneSet.has(index)){\r\n        let removed = lettersRemove(`.large-word-${index}`);\r\n        lettersReveals(removed);\r\n        notDoneSet.add(index);      \r\n    }\r\n}","import Swiper from 'swiper';\r\nimport {titleAnime} from './sectionTitleAnimation';\r\nimport {cityAnimation} from './cityAnimaton';\r\nimport {skillsAnimation} from './skillsAnimation';\r\nimport Bubbles from './background';\r\n\r\nlet background;\r\nlet backgroundSharp;\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    background = new Bubbles({\r\n        canvasSelector: '.background',\r\n        yVarianceRange: [-1.5, -0.5],\r\n        pixelsPerBody: 30000,\r\n        colors: ['#308c91']\r\n    });\r\n    backgroundSharp = new Bubbles({\r\n        canvasSelector: '.background-sharp'\r\n    });\r\n    background.init();\r\n    backgroundSharp.init();\r\n});\r\n\r\nexport const mySwiper = new Swiper ('.swiper-container', {\r\n    //virtualTranslate: true,\r\n    direction: 'vertical',\r\n    height: window.innerHeight,\r\n    allowTouchMove: true,\r\n    mousewheel: true,\r\n    keyboard: {\r\n        enabled: true,\r\n    },\r\n});\r\n\r\nconst portfolioSwiper = new Swiper('.portfolio__slider-container', {\r\n    loop: true,\r\n    navigation: {\r\n        nextEl: '.portfolio__slider-button-next',\r\n        prevEl: '.portfolio__slider-button-prev',\r\n    },\r\n});\r\n\r\nmySwiper.on('slideChange', () => {\r\n    background.onScrollThrottled(mySwiper.activeIndex);\r\n    backgroundSharp.onScrollThrottled(mySwiper.activeIndex);\r\n    titleAnime(mySwiper.activeIndex);\r\n    //cityAnimation(mySwiper.isEnd);\r\n    skillsAnimation(mySwiper.activeIndex);\r\n});","import anime from 'animejs';\r\nimport {lettersRemove, lettersReveals} from './lettersAnimation';\r\n\r\nconst rects = document.querySelectorAll('rect');\r\n[...rects].forEach(item => {\r\n    item.style.transform = 'scale(0)';\r\n});\r\n\r\nconst braket = document.querySelectorAll('.braket');\r\n[...braket].forEach(item => {\r\n    item.style.opacity = '0';\r\n});\r\n\r\nconst timeline = anime.timeline();\r\n\r\nconst removedDate = lettersRemove('.header__title');\r\nconst removedDate1 = lettersRemove('.title--header');\r\n\r\nexport const objAnimation = () => {\r\n\r\n    timeline\r\n    .add({\r\n        targets: '.braket',\r\n        opacity: 1\r\n    })\r\n    .add({\r\n        offset: '-=1000',\r\n        targets: '.braket',\r\n        direction: 'alternate',\r\n        loop: false,\r\n        strokeDashoffset:{\r\n            value: [anime.setDashoffset, 0],\r\n            easing: 'easeInOutSine',\r\n            duration: 1500,\r\n            delay: (el, i) => i * 250,\r\n        },\r\n        translateX: {\r\n            value: (el, i) => i? [-150, 0] : [150, 0],\r\n            delay: 1000\r\n        },\r\n    })\r\n    .add({\r\n        targets: 'rect',\r\n        scale: [0, 1],\r\n        delay: (el, i) => i * 250,\r\n        duration: 1000,\r\n    });\r\n\r\n    let timelineDone = timeline.finished.then(() => {\r\n        lettersReveals(removedDate).finished.then(() => {\r\n            lettersReveals(removedDate1);\r\n        });\r\n    });\r\n    \r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/**\n * SSR Window 1.0.0\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: February 10, 2018\n */\nvar d;\nif (typeof document === 'undefined') {\n  d = {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  };\n} else {\n  // eslint-disable-next-line\n  d = document;\n}\n\nvar doc = d;\n\nvar w;\nif (typeof window === 'undefined') {\n  w = {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  };\n} else {\n  // eslint-disable-next-line\n  w = window;\n}\n\nvar win = w;\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.0.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 21, 2018\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  if (typeof value === 'undefined') {\n    if (this[0]) {\n      if (this[0].multiple && this[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < this[0].selectedOptions.length; i += 1) {\n          values.push(this[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return this[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].value = value;\n  }\n  return this;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    eventData.unshift(e);\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    eventData.unshift(e);\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        if (!el.dom7Listeners) el.dom7Listeners = [];\n        el.dom7Listeners.push({\n          type: eventType,\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(events[j], handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = [];\n        el.dom7LiveListeners.push({\n          type: eventType,\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(events[j], handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      if (!targetSelector) {\n        if (el.dom7Listeners) {\n          for (let k = 0; k < el.dom7Listeners.length; k += 1) {\n            if (listener) {\n              if (el.dom7Listeners[k].listener === listener) {\n                el.removeEventListener(events[i], el.dom7Listeners[k].proxyListener, capture);\n              }\n            } else if (el.dom7Listeners[k].type === events[i]) {\n              el.removeEventListener(events[i], el.dom7Listeners[k].proxyListener, capture);\n            }\n          }\n        }\n      } else if (el.dom7LiveListeners) {\n        for (let k = 0; k < el.dom7LiveListeners.length; k += 1) {\n          if (listener) {\n            if (el.dom7LiveListeners[k].listener === listener) {\n              el.removeEventListener(events[i], el.dom7LiveListeners[k].proxyListener, capture);\n            }\n          } else if (el.dom7LiveListeners[k].type === events[i]) {\n            el.removeEventListener(events[i], el.dom7LiveListeners[k].proxyListener, capture);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(e) {\n    const eventData = e.target.dom7EventData || [];\n    listener.apply(this, eventData);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      let evt;\n      try {\n        evt = new window.CustomEvent(events[i], {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(events[i], true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      this[j].dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      this[j].dispatchEvent(evt);\n      this[j].dom7EventData = [];\n      delete this[j].dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.1.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 11, 2018\n */\n\nimport { $, add, addClass, append, attr, children, closest, css, data, each, eq, find, hasClass, html, index, is, next, nextAll, off, offset, on, outerHeight, outerWidth, parent, parents, prepend, prev, prevAll, remove, removeAttr, removeClass, styles, text, toggleClass, transform, transition, transitionEnd, trigger } from 'dom7/dist/dom7.modular';\nimport { document, window } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n  on(events, handler) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event].push(handler);\n    });\n    return self;\n  }\n  once(events, handler) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler);\n  }\n  off(events, handler) {\n    const self = this;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nvar updateSize = function () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n};\n\nvar updateSlides = function () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtl, wrongRTL,\n  } = swiper;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSlidesLength = slidesLength;\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n    if (params.slidesPerView === 'auto') {\n      slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(snapGrid[i]);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(snapGrid[i]);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n};\n\nvar updateAutoHeight = function () {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n};\n\nvar updateSlidesOffset = function () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n};\n\nvar updateSlidesProgress = function (translate = this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress =\n      (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible =\n                (slideBefore >= 0 && slideBefore < swiper.size) ||\n                (slideAfter > 0 && slideAfter <= swiper.size) ||\n                (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n};\n\nvar updateProgress = function (translate = this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n};\n\nvar updateSlidesClasses = function () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n};\n\nvar updateActiveIndex = function (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtl ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n};\n\nvar updateClickedSlide = function (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n};\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nvar getTranslate = function (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n};\n\nvar setTranslate = function (translate, byController) {\n  const swiper = this;\n  const {\n    rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n};\n\nvar minTranslate = function () {\n  return (-this.snapGrid[0]);\n};\n\nvar maxTranslate = function () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n};\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nvar setTransition = function (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n};\n\nvar transitionStart = function (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n};\n\nvar transitionEnd$1 = function (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n};\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nvar slideTo = function (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtl, $wrapperEl,\n  } = swiper;\n  if (swiper.animating && params.preventIntercationOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      $wrapperEl.transitionEnd(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.transitionEnd(runCallbacks, direction);\n      });\n    }\n  }\n\n  return true;\n};\n\nvar slideToLoop = function (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n};\n\n/* eslint no-unused-vars: \"off\" */\nvar slideNext = function (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n};\n\n/* eslint no-unused-vars: \"off\" */\nvar slidePrev = function (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex - 1, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex - 1, speed, runCallbacks, internal);\n};\n\n/* eslint no-unused-vars: \"off\" */\nvar slideReset = function (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n};\n\nvar slideToClickedSlide = function () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2)) ||\n        (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n};\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClickedSlide,\n};\n\nvar loopCreate = function () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n};\n\nvar loopFix = function () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex > slides.length - (params.slidesPerView * 2))) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n};\n\nvar loopDestroy = function () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n};\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nvar setGrabCursor = function (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n};\n\nvar unsetGrabCursor = function () {\n  const swiper = this;\n  if (Support.touch) return;\n  swiper.el.style.cursor = '';\n};\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nvar appendSlide = function (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n};\n\nvar prependSlide = function (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n};\n\nvar removeSlide = function (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndex;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n};\n\nvar removeAllSlides = function () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n};\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi =\n      !device.webView &&\n      (ipod || iphone) &&\n      (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) &&\n      metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nvar onTouchStart = function (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventIntercationOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  if (\n    Device.ios &&\n    !Device.cordova &&\n    params.iOSEdgeSwipeDetection &&\n    (startX <= params.iOSEdgeSwipeThreshold) &&\n    (startX >= window.screen.width - params.iOSEdgeSwipeThreshold)\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement &&\n      $(document.activeElement).is(data$$1.formElements) &&\n      document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n};\n\nvar onTouchMove = function (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate()) ||\n        (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) ||\n      (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n};\n\nvar onTouchEnd = function (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    } else if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideReset();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n};\n\nvar onResize = function () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n};\n\nvar onClick = function (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n};\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on('resize observerUpdate', onResize);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off('resize observerUpdate', onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nvar setBreakpoint = function () {\n  const swiper = this;\n  const { activeIndex, loopedSlides = 0, params } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n};\n\nvar getBreakpoint = function (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n};\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nvar addClasses = function () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n};\n\nvar removeClasses = function () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n};\n\nvar classes = { addClasses, removeClasses };\n\nvar loadImage = function (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n};\n\nvar preloadImages = function () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n};\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowTouchMove = !swiper.isLocked;\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventIntercationOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  iOSEdgeSwipeDetection: false,\n  iOSEdgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper$1 extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper$1.prototype[protoMethod]) {\n          Swiper$1.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object') return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object' &&\n          !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper$1(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtl ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    swiper.emit('update');\n  }\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n  }\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static get Class() {\n    return SwiperClass;\n  }\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$2 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$2 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$2 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      mutations.forEach((mutation) => {\n        swiper.emit('observerUpdate', mutation);\n      });\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtl && swiper.isHorizontal()) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1);\n      slidesBefore = slidesPerGroup;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (swiper.rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth &&\n          point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !swiper.rtl) || (kc === 37 && swiper.rtl)) swiper.slideNext();\n      if ((kc === 37 && !swiper.rtl) || (kc === 39 && swiper.rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported &&\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtl ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideReset();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.stopAutoplay();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.nextEl === 'string' &&\n        $nextEl.length > 1 &&\n        swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof params.prevEl === 'string' &&\n        $prevEl.length > 1 &&\n        swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick &&\n        !$(e.target).is($prevEl) &&\n        !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          if (current > swiper.previousIndex && swiper.pagination.dynamicBulletIndex < (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex += 1;\n          } else if (current < swiper.previousIndex && swiper.pagination.dynamicBulletIndex > 0) {\n            swiper.pagination.dynamicBulletIndex -= 1;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (params.dynamicMainBullets - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(current + 1);\n      $el.find(`.${params.totalClass}`).text(total);\n    }\n    if (params.type === 'progressbar') {\n      const scale = (current + 1) / total;\n      let scaleX = scale;\n      let scaleY = 1;\n      if (!swiper.isHorizontal()) {\n        scaleY = scale;\n        scaleX = 1;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML =\n        `<span class=\"${params.currentClass}\"></span>` +\n        ' / ' +\n        `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements &&\n      typeof params.el === 'string' &&\n      $el.length > 1 &&\n      swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el &&\n        swiper.params.pagination.hideOnClick &&\n        swiper.pagination.$el.length > 0 &&\n        !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl && swiper.isHorizontal()) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (swiper.rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideReset();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) image.startX = -image.startX;\n      if (swiper.rtl) image.startY = -image.startY;\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal() &&\n        (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x) ||\n          (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } else if (\n        !swiper.isHorizontal() &&\n        (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y) ||\n          (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop ?\n        new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) :\n        new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = c.rtl && c.params.direction === 'horizontal' ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper$1) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper$1 && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper$1) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper$1 && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: false,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      swiper.slideTo(swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index());\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl.transitionEnd(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.autoplay.paused = false;\n        if (!swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.run();\n        }\n      });\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ?\n        Math.max(1 - Math.abs($slideEl[0].progress), 0) :\n        1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2) +\n          (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (swiper.rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\n// Swiper Class\n// Core Modules\nconst components = [\n  Device$2,\n  Support$2,\n  Browser$2,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow\n];\n\nif (typeof Swiper$1.use === 'undefined') {\n  Swiper$1.use = Swiper$1.Class.use;\n  Swiper$1.installModule = Swiper$1.Class.installModule;\n}\n\nSwiper$1.use(components);\n\nexport default Swiper$1;\n","import anime from 'animejs';\r\nimport {objAnimation} from './objectAnimation';\r\n\r\n\r\nconst preloader = (() => {\r\n\r\n    const timeline = anime.timeline({\r\n        loop: true,\r\n        direction: 'alternate',\r\n    });\r\n    const doneTimeLine = anime.timeline({\r\n    });\r\n\r\n    const preloader = document.querySelector('.preloader');\r\n\r\n    const done = () => {\r\n        setTimeout(() => {\r\n            doneTimeLine\r\n            .add({\r\n                targets: '.preloader__squre',\r\n                opacity: 0,\r\n                duration: 2000\r\n            })\r\n            .add({\r\n                targets: '.preloader__md--1',\r\n                translateX: -200,\r\n                opacity: 0,\r\n                duration: 2000,\r\n                easing: 'easeInOutQuad',\r\n                offset: '-=2000'\r\n            })\r\n            .add({\r\n                targets: '.preloader__md--2',\r\n                translateX: 200,\r\n                opacity: 0,\r\n                duration: 2000,\r\n                easing: 'easeInOutQuad',\r\n                offset: '-=2000'\r\n            })\r\n            .add({\r\n                targets: '.preloader',\r\n                opacity: 0\r\n            });\r\n\r\n            let promise = doneTimeLine.finished.then(() => {\r\n                timeline.pause();\r\n                preloader.style.display = 'none';\r\n                objAnimation();\r\n            });\r\n\r\n        }, 3100);\r\n    };\r\n\r\n    timeline\r\n    .add({\r\n        targets: '.preloader__squre',\r\n        rotate: '1turn' ,\r\n        borderRadius: ['0', '3rem'],\r\n        easing: 'easeInOutQuad',\r\n        duration: 3000\r\n    })\r\n    .add({\r\n        targets: '.preloader__color',\r\n        height: ['0', '100%'],\r\n        easing: 'easeInOutQuad',\r\n    });\r\n\r\n    window.addEventListener('load', done);  \r\n})();\r\n\r\n","import {mySwiper} from './swiper';\r\n\r\nconst navigation = (() => {\r\n    const naviList = document.querySelector('.navigation__list');\r\n    const button = document.querySelector('.navigation__checkbox');\r\n\r\n    const slide = (e) => {\r\n        if(e && e.target.nodeName === 'A'){\r\n            button.checked = false;\r\n            mySwiper.slideTo(e.target.dataset.id);\r\n        }\r\n    };\r\n\r\n    naviList.addEventListener('click', slide);\r\n})();","export const emails = {\r\n    service: 'sendgrid',\r\n    template: 'template_zp2Dnald',\r\n    user: 'user_TaozcudGNOb811wtZrJbl'\r\n};","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.emailjs = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n'use strict';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nmodule.exports = Promise;\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Promise = require(\"promise-polyfill\");\nvar EmailJSResponseStatus_1 = require(\"./models/EmailJSResponseStatus\");\nvar UI_1 = require(\"./services/ui/UI\");\nvar _userID = null;\nfunction sendPost(url, data, headers) {\n    if (headers === void 0) { headers = {}; }\n    return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', function (event) {\n            var responseStatus = new EmailJSResponseStatus_1.EmailJSResponseStatus(event.target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', function (event) {\n            reject(new EmailJSResponseStatus_1.EmailJSResponseStatus(event.target));\n        });\n        xhr.open('POST', url, true);\n        for (var key in headers) {\n            xhr.setRequestHeader(key, headers[key]);\n        }\n        xhr.send(data);\n    });\n}\nfunction appendGoogleCaptcha(templatePrams) {\n    var element = document.getElementById('g-recaptcha-response');\n    if (element && element.value) {\n        templatePrams['g-recaptcha-response'] = element.value;\n    }\n    element = null;\n    return templatePrams;\n}\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n */\nfunction init(userID) {\n    _userID = userID;\n}\nexports.init = init;\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {Object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nfunction send(serviceID, templateID, templatePrams, userID) {\n    var params = {\n        lib_version: '2.1.0',\n        user_id: userID || _userID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: appendGoogleCaptcha(templatePrams)\n    };\n    return sendPost('https://api.emailjs.com/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json'\n    });\n}\nexports.send = send;\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nfunction sendForm(serviceID, templateID, form, userID) {\n    if (typeof form === 'string') {\n        form = document.querySelector(form);\n    }\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'Expected the HTML form element or the style selector of form';\n    }\n    UI_1.UI.progressState(form);\n    var formData = new FormData(form);\n    formData.append('lib_version', '2.1.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', userID || _userID);\n    return sendPost('https://api.emailjs.com/api/v1.0/email/send-form', formData)\n        .then(function (response) {\n        UI_1.UI.successState(form);\n        return response;\n    }, function (error) {\n        UI_1.UI.errorState(form);\n        return Promise.reject(error);\n    });\n}\nexports.sendForm = sendForm;\n\n},{\"./models/EmailJSResponseStatus\":3,\"./services/ui/UI\":4,\"promise-polyfill\":1}],3:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EmailJSResponseStatus = /** @class */ (function () {\n    function EmailJSResponseStatus(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n    return EmailJSResponseStatus;\n}());\nexports.EmailJSResponseStatus = EmailJSResponseStatus;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UI = /** @class */ (function () {\n    function UI() {\n    }\n    UI.clearAll = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.remove(this.DONE);\n        form.classList.remove(this.ERROR);\n    };\n    UI.progressState = function (form) {\n        this.clearAll(form);\n        form.classList.add(this.PROGRESS);\n    };\n    UI.successState = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.add(this.DONE);\n    };\n    UI.errorState = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.add(this.ERROR);\n    };\n    UI.PROGRESS = 'emailjs-sending';\n    UI.DONE = 'emailjs-success';\n    UI.ERROR = 'emailjs-error';\n    return UI;\n}());\nexports.UI = UI;\n\n},{}]},{},[2])(2)\n});","import {send} from 'emailjs-com';\r\nimport {emails} from './emailVars';\r\n\r\n\r\nconst emailForm = (() => {\r\n    const emailItput = document.querySelector('.form__input');\r\n    const emailText = document.querySelector('.form__text');\r\n    const emailBtn = document.querySelector('.form__submit-btn');\r\n    const form = document.querySelector('.form'); \r\n    \r\n    let email = '';\r\n    let text = '';\r\n\r\n    form.addEventListener('submit', (e) => {\r\n        e.preventDefault();\r\n        email = emailItput.value;\r\n        text = emailText.value;\r\n        \r\n        if(email.length && text.length){\r\n            emailBtn.innerHTML = 'Sending...';\r\n            send(emails.service, emails.template, {name: email, notes: text}, emails.user).then(\r\n            (res) => {\r\n                emailBtn.innerHTML = 'Done!';\r\n                emailText.value = '';\r\n                emailItput.value = '';\r\n            }, \r\n            (err) => {\r\n                console.log(err);\r\n            });\r\n        }\r\n\r\n    });\r\n\r\n})();\r\n","/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n","import '../assets/styles/index.scss';\r\nimport './objectAnimation';\r\nimport './swiper';\r\nimport './emails';\r\nimport './cityAnimaton';\r\nimport './navigation';\r\nimport './preloader';\r\nimport './skillsAnimation';\r\nimport './lettersAnimation';\r\nimport './sectionTitleAnimation';\r\nimport './background';\r\n"],"sourceRoot":""}